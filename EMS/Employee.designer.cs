#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EMS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="emp")]
	public partial class EmployeeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertempdetails(empdetails instance);
    partial void Updateempdetails(empdetails instance);
    partial void Deleteempdetails(empdetails instance);
    partial void Insertdeptdetails(deptdetails instance);
    partial void Updatedeptdetails(deptdetails instance);
    partial void Deletedeptdetails(deptdetails instance);
    partial void Insertjobdetails(jobdetails instance);
    partial void Updatejobdetails(jobdetails instance);
    partial void Deletejobdetails(jobdetails instance);
    partial void Insertempleave(empleave instance);
    partial void Updateempleave(empleave instance);
    partial void Deleteempleave(empleave instance);
    #endregion
		
		public EmployeeDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["empConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<empdetails> empdetails
		{
			get
			{
				return this.GetTable<empdetails>();
			}
		}
		
		public System.Data.Linq.Table<deptdetails> deptdetails
		{
			get
			{
				return this.GetTable<deptdetails>();
			}
		}
		
		public System.Data.Linq.Table<jobdetails> jobdetails
		{
			get
			{
				return this.GetTable<jobdetails>();
			}
		}
		
		public System.Data.Linq.Table<empsalary> empsalaries
		{
			get
			{
				return this.GetTable<empsalary>();
			}
		}
		
		public System.Data.Linq.Table<empleavetype> empleavetypes
		{
			get
			{
				return this.GetTable<empleavetype>();
			}
		}
		
		public System.Data.Linq.Table<empleave> empleaves
		{
			get
			{
				return this.GetTable<empleave>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.empdetails")]
	public partial class empdetails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _empid;
		
		private string _empname;
		
		private string _email;
		
		private string _phoneno;
		
		private System.DateTime _hiredate;
		
		private string _mngid;
		
		private string _deptid;
		
		private string _jobid;
		
		private string _gender;
		
		private string _password;
		
		private EntitySet<empdetails> _empdetails1;
		
		private EntitySet<empleave> _empleaves;
		
		private EntityRef<empdetails> _empdetail1;
		
		private EntityRef<deptdetails> _deptdetails;
		
		private EntityRef<jobdetails> _jobdetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempidChanging(string value);
    partial void OnempidChanged();
    partial void OnempnameChanging(string value);
    partial void OnempnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphonenoChanging(string value);
    partial void OnphonenoChanged();
    partial void OnhiredateChanging(System.DateTime value);
    partial void OnhiredateChanged();
    partial void OnmngidChanging(string value);
    partial void OnmngidChanged();
    partial void OndeptidChanging(string value);
    partial void OndeptidChanged();
    partial void OnjobidChanging(string value);
    partial void OnjobidChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public empdetails()
		{
			this._empdetails1 = new EntitySet<empdetails>(new Action<empdetails>(this.attach_empdetails1), new Action<empdetails>(this.detach_empdetails1));
			this._empleaves = new EntitySet<empleave>(new Action<empleave>(this.attach_empleaves), new Action<empleave>(this.detach_empleaves));
			this._empdetail1 = default(EntityRef<empdetails>);
			this._deptdetails = default(EntityRef<deptdetails>);
			this._jobdetails = default(EntityRef<jobdetails>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string empid
		{
			get
			{
				return this._empid;
			}
			set
			{
				if ((this._empid != value))
				{
					this.OnempidChanging(value);
					this.SendPropertyChanging();
					this._empid = value;
					this.SendPropertyChanged("empid");
					this.OnempidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string empname
		{
			get
			{
				return this._empname;
			}
			set
			{
				if ((this._empname != value))
				{
					this.OnempnameChanging(value);
					this.SendPropertyChanging();
					this._empname = value;
					this.SendPropertyChanged("empname");
					this.OnempnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string phoneno
		{
			get
			{
				return this._phoneno;
			}
			set
			{
				if ((this._phoneno != value))
				{
					this.OnphonenoChanging(value);
					this.SendPropertyChanging();
					this._phoneno = value;
					this.SendPropertyChanged("phoneno");
					this.OnphonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hiredate", DbType="Date NOT NULL")]
		public System.DateTime hiredate
		{
			get
			{
				return this._hiredate;
			}
			set
			{
				if ((this._hiredate != value))
				{
					this.OnhiredateChanging(value);
					this.SendPropertyChanging();
					this._hiredate = value;
					this.SendPropertyChanged("hiredate");
					this.OnhiredateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mngid", DbType="VarChar(50)")]
		public string mngid
		{
			get
			{
				return this._mngid;
			}
			set
			{
				if ((this._mngid != value))
				{
					if (this._empdetail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmngidChanging(value);
					this.SendPropertyChanging();
					this._mngid = value;
					this.SendPropertyChanged("mngid");
					this.OnmngidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deptid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string deptid
		{
			get
			{
				return this._deptid;
			}
			set
			{
				if ((this._deptid != value))
				{
					if (this._deptdetails.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeptidChanging(value);
					this.SendPropertyChanging();
					this._deptid = value;
					this.SendPropertyChanged("deptid");
					this.OndeptidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string jobid
		{
			get
			{
				return this._jobid;
			}
			set
			{
				if ((this._jobid != value))
				{
					if (this._jobdetails.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjobidChanging(value);
					this.SendPropertyChanging();
					this._jobid = value;
					this.SendPropertyChanged("jobid");
					this.OnjobidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="empdetails_empdetails", Storage="_empdetails1", ThisKey="empid", OtherKey="mngid")]
		public EntitySet<empdetails> empdetails1
		{
			get
			{
				return this._empdetails1;
			}
			set
			{
				this._empdetails1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="empdetails_empleave", Storage="_empleaves", ThisKey="empid", OtherKey="empid")]
		public EntitySet<empleave> empleaves
		{
			get
			{
				return this._empleaves;
			}
			set
			{
				this._empleaves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="empdetails_empdetails", Storage="_empdetail1", ThisKey="mngid", OtherKey="empid", IsForeignKey=true)]
		public empdetails empdetail1
		{
			get
			{
				return this._empdetail1.Entity;
			}
			set
			{
				empdetails previousValue = this._empdetail1.Entity;
				if (((previousValue != value) 
							|| (this._empdetail1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._empdetail1.Entity = null;
						previousValue.empdetails1.Remove(this);
					}
					this._empdetail1.Entity = value;
					if ((value != null))
					{
						value.empdetails1.Add(this);
						this._mngid = value.empid;
					}
					else
					{
						this._mngid = default(string);
					}
					this.SendPropertyChanged("empdetail1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="deptdetails_empdetails", Storage="_deptdetails", ThisKey="deptid", OtherKey="deptid", IsForeignKey=true)]
		public deptdetails deptdetails
		{
			get
			{
				return this._deptdetails.Entity;
			}
			set
			{
				deptdetails previousValue = this._deptdetails.Entity;
				if (((previousValue != value) 
							|| (this._deptdetails.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._deptdetails.Entity = null;
						previousValue.empdetails.Remove(this);
					}
					this._deptdetails.Entity = value;
					if ((value != null))
					{
						value.empdetails.Add(this);
						this._deptid = value.deptid;
					}
					else
					{
						this._deptid = default(string);
					}
					this.SendPropertyChanged("deptdetails");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jobdetails_empdetails", Storage="_jobdetails", ThisKey="jobid", OtherKey="jobid", IsForeignKey=true)]
		public jobdetails jobdetails
		{
			get
			{
				return this._jobdetails.Entity;
			}
			set
			{
				jobdetails previousValue = this._jobdetails.Entity;
				if (((previousValue != value) 
							|| (this._jobdetails.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jobdetails.Entity = null;
						previousValue.empdetails.Remove(this);
					}
					this._jobdetails.Entity = value;
					if ((value != null))
					{
						value.empdetails.Add(this);
						this._jobid = value.jobid;
					}
					else
					{
						this._jobid = default(string);
					}
					this.SendPropertyChanged("jobdetails");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_empdetails1(empdetails entity)
		{
			this.SendPropertyChanging();
			entity.empdetail1 = this;
		}
		
		private void detach_empdetails1(empdetails entity)
		{
			this.SendPropertyChanging();
			entity.empdetail1 = null;
		}
		
		private void attach_empleaves(empleave entity)
		{
			this.SendPropertyChanging();
			entity.empdetails = this;
		}
		
		private void detach_empleaves(empleave entity)
		{
			this.SendPropertyChanging();
			entity.empdetails = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.deptdetails")]
	public partial class deptdetails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _deptid;
		
		private string _deptname;
		
		private string _mngid;
		
		private string _location;
		
		private EntitySet<empdetails> _empdetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndeptidChanging(string value);
    partial void OndeptidChanged();
    partial void OndeptnameChanging(string value);
    partial void OndeptnameChanged();
    partial void OnmngidChanging(string value);
    partial void OnmngidChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    #endregion
		
		public deptdetails()
		{
			this._empdetails = new EntitySet<empdetails>(new Action<empdetails>(this.attach_empdetails), new Action<empdetails>(this.detach_empdetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deptid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string deptid
		{
			get
			{
				return this._deptid;
			}
			set
			{
				if ((this._deptid != value))
				{
					this.OndeptidChanging(value);
					this.SendPropertyChanging();
					this._deptid = value;
					this.SendPropertyChanged("deptid");
					this.OndeptidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deptname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string deptname
		{
			get
			{
				return this._deptname;
			}
			set
			{
				if ((this._deptname != value))
				{
					this.OndeptnameChanging(value);
					this.SendPropertyChanging();
					this._deptname = value;
					this.SendPropertyChanged("deptname");
					this.OndeptnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mngid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mngid
		{
			get
			{
				return this._mngid;
			}
			set
			{
				if ((this._mngid != value))
				{
					this.OnmngidChanging(value);
					this.SendPropertyChanging();
					this._mngid = value;
					this.SendPropertyChanged("mngid");
					this.OnmngidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="deptdetails_empdetails", Storage="_empdetails", ThisKey="deptid", OtherKey="deptid")]
		public EntitySet<empdetails> empdetails
		{
			get
			{
				return this._empdetails;
			}
			set
			{
				this._empdetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_empdetails(empdetails entity)
		{
			this.SendPropertyChanging();
			entity.deptdetails = this;
		}
		
		private void detach_empdetails(empdetails entity)
		{
			this.SendPropertyChanging();
			entity.deptdetails = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.jobdetails")]
	public partial class jobdetails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _jobid;
		
		private string _jobtitle;
		
		private int _minsal;
		
		private int _maxsal;
		
		private EntitySet<empdetails> _empdetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnjobidChanging(string value);
    partial void OnjobidChanged();
    partial void OnjobtitleChanging(string value);
    partial void OnjobtitleChanged();
    partial void OnminsalChanging(int value);
    partial void OnminsalChanged();
    partial void OnmaxsalChanging(int value);
    partial void OnmaxsalChanged();
    #endregion
		
		public jobdetails()
		{
			this._empdetails = new EntitySet<empdetails>(new Action<empdetails>(this.attach_empdetails), new Action<empdetails>(this.detach_empdetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string jobid
		{
			get
			{
				return this._jobid;
			}
			set
			{
				if ((this._jobid != value))
				{
					this.OnjobidChanging(value);
					this.SendPropertyChanging();
					this._jobid = value;
					this.SendPropertyChanged("jobid");
					this.OnjobidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobtitle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string jobtitle
		{
			get
			{
				return this._jobtitle;
			}
			set
			{
				if ((this._jobtitle != value))
				{
					this.OnjobtitleChanging(value);
					this.SendPropertyChanging();
					this._jobtitle = value;
					this.SendPropertyChanged("jobtitle");
					this.OnjobtitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minsal", DbType="Int NOT NULL")]
		public int minsal
		{
			get
			{
				return this._minsal;
			}
			set
			{
				if ((this._minsal != value))
				{
					this.OnminsalChanging(value);
					this.SendPropertyChanging();
					this._minsal = value;
					this.SendPropertyChanged("minsal");
					this.OnminsalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxsal", DbType="Int NOT NULL")]
		public int maxsal
		{
			get
			{
				return this._maxsal;
			}
			set
			{
				if ((this._maxsal != value))
				{
					this.OnmaxsalChanging(value);
					this.SendPropertyChanging();
					this._maxsal = value;
					this.SendPropertyChanged("maxsal");
					this.OnmaxsalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jobdetails_empdetails", Storage="_empdetails", ThisKey="jobid", OtherKey="jobid")]
		public EntitySet<empdetails> empdetails
		{
			get
			{
				return this._empdetails;
			}
			set
			{
				this._empdetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_empdetails(empdetails entity)
		{
			this.SendPropertyChanging();
			entity.jobdetails = this;
		}
		
		private void detach_empdetails(empdetails entity)
		{
			this.SendPropertyChanging();
			entity.jobdetails = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.empsalary")]
	public partial class empsalary
	{
		
		private string _empid;
		
		private string _empname;
		
		private int _bsalary;
		
		private int _hra;
		
		private int _ma;
		
		private int _fa;
		
		private int _pia;
		
		private int _pf;
		
		private int _tax;
		
		private int _od;
		
		private int _gross;
		
		private int _totalded;
		
		private int _net;
		
		public empsalary()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string empid
		{
			get
			{
				return this._empid;
			}
			set
			{
				if ((this._empid != value))
				{
					this._empid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string empname
		{
			get
			{
				return this._empname;
			}
			set
			{
				if ((this._empname != value))
				{
					this._empname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bsalary", DbType="Int NOT NULL")]
		public int bsalary
		{
			get
			{
				return this._bsalary;
			}
			set
			{
				if ((this._bsalary != value))
				{
					this._bsalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hra", DbType="Int NOT NULL")]
		public int hra
		{
			get
			{
				return this._hra;
			}
			set
			{
				if ((this._hra != value))
				{
					this._hra = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ma", DbType="Int NOT NULL")]
		public int ma
		{
			get
			{
				return this._ma;
			}
			set
			{
				if ((this._ma != value))
				{
					this._ma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fa", DbType="Int NOT NULL")]
		public int fa
		{
			get
			{
				return this._fa;
			}
			set
			{
				if ((this._fa != value))
				{
					this._fa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pia", DbType="Int NOT NULL")]
		public int pia
		{
			get
			{
				return this._pia;
			}
			set
			{
				if ((this._pia != value))
				{
					this._pia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pf", DbType="Int NOT NULL")]
		public int pf
		{
			get
			{
				return this._pf;
			}
			set
			{
				if ((this._pf != value))
				{
					this._pf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax", DbType="Int NOT NULL")]
		public int tax
		{
			get
			{
				return this._tax;
			}
			set
			{
				if ((this._tax != value))
				{
					this._tax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_od", DbType="Int NOT NULL")]
		public int od
		{
			get
			{
				return this._od;
			}
			set
			{
				if ((this._od != value))
				{
					this._od = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gross", DbType="Int NOT NULL")]
		public int gross
		{
			get
			{
				return this._gross;
			}
			set
			{
				if ((this._gross != value))
				{
					this._gross = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalded", DbType="Int NOT NULL")]
		public int totalded
		{
			get
			{
				return this._totalded;
			}
			set
			{
				if ((this._totalded != value))
				{
					this._totalded = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_net", DbType="Int NOT NULL")]
		public int net
		{
			get
			{
				return this._net;
			}
			set
			{
				if ((this._net != value))
				{
					this._net = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.empleavetype")]
	public partial class empleavetype
	{
		
		private string _empid;
		
		private string _empname;
		
		private int _casual;
		
		private int _earned;
		
		private int _sick;
		
		private int _maternity;
		
		private int _paternity;
		
		public empleavetype()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string empid
		{
			get
			{
				return this._empid;
			}
			set
			{
				if ((this._empid != value))
				{
					this._empid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string empname
		{
			get
			{
				return this._empname;
			}
			set
			{
				if ((this._empname != value))
				{
					this._empname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_casual", DbType="Int NOT NULL")]
		public int casual
		{
			get
			{
				return this._casual;
			}
			set
			{
				if ((this._casual != value))
				{
					this._casual = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_earned", DbType="Int NOT NULL")]
		public int earned
		{
			get
			{
				return this._earned;
			}
			set
			{
				if ((this._earned != value))
				{
					this._earned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sick", DbType="Int NOT NULL")]
		public int sick
		{
			get
			{
				return this._sick;
			}
			set
			{
				if ((this._sick != value))
				{
					this._sick = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maternity", DbType="Int NOT NULL")]
		public int maternity
		{
			get
			{
				return this._maternity;
			}
			set
			{
				if ((this._maternity != value))
				{
					this._maternity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paternity", DbType="Int NOT NULL")]
		public int paternity
		{
			get
			{
				return this._paternity;
			}
			set
			{
				if ((this._paternity != value))
				{
					this._paternity = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.empleaves")]
	public partial class empleave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _leaveid;
		
		private string _empid;
		
		private string _empname;
		
		private string _mngid;
		
		private System.DateTime _fromdate;
		
		private System.DateTime _tilldate;
		
		private int _nod;
		
		private string _leavetype;
		
		private string _reason;
		
		private string _status;
		
		private EntityRef<empdetails> _empdetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnleaveidChanging(int value);
    partial void OnleaveidChanged();
    partial void OnempidChanging(string value);
    partial void OnempidChanged();
    partial void OnempnameChanging(string value);
    partial void OnempnameChanged();
    partial void OnmngidChanging(string value);
    partial void OnmngidChanged();
    partial void OnfromdateChanging(System.DateTime value);
    partial void OnfromdateChanged();
    partial void OntilldateChanging(System.DateTime value);
    partial void OntilldateChanged();
    partial void OnnodChanging(int value);
    partial void OnnodChanged();
    partial void OnleavetypeChanging(string value);
    partial void OnleavetypeChanged();
    partial void OnreasonChanging(string value);
    partial void OnreasonChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public empleave()
		{
			this._empdetails = default(EntityRef<empdetails>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leaveid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int leaveid
		{
			get
			{
				return this._leaveid;
			}
			set
			{
				if ((this._leaveid != value))
				{
					this.OnleaveidChanging(value);
					this.SendPropertyChanging();
					this._leaveid = value;
					this.SendPropertyChanged("leaveid");
					this.OnleaveidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string empid
		{
			get
			{
				return this._empid;
			}
			set
			{
				if ((this._empid != value))
				{
					if (this._empdetails.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempidChanging(value);
					this.SendPropertyChanging();
					this._empid = value;
					this.SendPropertyChanged("empid");
					this.OnempidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string empname
		{
			get
			{
				return this._empname;
			}
			set
			{
				if ((this._empname != value))
				{
					this.OnempnameChanging(value);
					this.SendPropertyChanging();
					this._empname = value;
					this.SendPropertyChanged("empname");
					this.OnempnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mngid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mngid
		{
			get
			{
				return this._mngid;
			}
			set
			{
				if ((this._mngid != value))
				{
					this.OnmngidChanging(value);
					this.SendPropertyChanging();
					this._mngid = value;
					this.SendPropertyChanged("mngid");
					this.OnmngidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromdate", DbType="Date NOT NULL")]
		public System.DateTime fromdate
		{
			get
			{
				return this._fromdate;
			}
			set
			{
				if ((this._fromdate != value))
				{
					this.OnfromdateChanging(value);
					this.SendPropertyChanging();
					this._fromdate = value;
					this.SendPropertyChanged("fromdate");
					this.OnfromdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tilldate", DbType="Date NOT NULL")]
		public System.DateTime tilldate
		{
			get
			{
				return this._tilldate;
			}
			set
			{
				if ((this._tilldate != value))
				{
					this.OntilldateChanging(value);
					this.SendPropertyChanging();
					this._tilldate = value;
					this.SendPropertyChanged("tilldate");
					this.OntilldateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nod", DbType="Int NOT NULL")]
		public int nod
		{
			get
			{
				return this._nod;
			}
			set
			{
				if ((this._nod != value))
				{
					this.OnnodChanging(value);
					this.SendPropertyChanging();
					this._nod = value;
					this.SendPropertyChanged("nod");
					this.OnnodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leavetype", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string leavetype
		{
			get
			{
				return this._leavetype;
			}
			set
			{
				if ((this._leavetype != value))
				{
					this.OnleavetypeChanging(value);
					this.SendPropertyChanging();
					this._leavetype = value;
					this.SendPropertyChanged("leavetype");
					this.OnleavetypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="empdetails_empleave", Storage="_empdetails", ThisKey="empid", OtherKey="empid", IsForeignKey=true)]
		public empdetails empdetails
		{
			get
			{
				return this._empdetails.Entity;
			}
			set
			{
				empdetails previousValue = this._empdetails.Entity;
				if (((previousValue != value) 
							|| (this._empdetails.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._empdetails.Entity = null;
						previousValue.empleaves.Remove(this);
					}
					this._empdetails.Entity = value;
					if ((value != null))
					{
						value.empleaves.Add(this);
						this._empid = value.empid;
					}
					else
					{
						this._empid = default(string);
					}
					this.SendPropertyChanged("empdetails");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
